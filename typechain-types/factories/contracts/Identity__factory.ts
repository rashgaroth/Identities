/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Identity, IdentityInterface } from "../../contracts/Identity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_ADDITIONAL_OWNERS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAdditionalOwner",
        type: "address",
      },
    ],
    name: "addAdditionalOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "identifier",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SharedStructs.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    name: "addClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "additionalOwners",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "additionalOwnersCount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOfAnyNftInContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_additionalOwner",
        type: "address",
      },
    ],
    name: "proposeAdditionalRemoval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_additionalOwner",
        type: "address",
      },
    ],
    name: "removeAdditionalOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "removeAdditionalOwnerAcknowledgments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "removeAdditionalOwnerConfirmationCount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526002805461ffff1916600917905534801561001e57600080fd5b50326100338161003960201b61116a1760201c565b5061009f565b6000546001600160a01b0382811691161461009c57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b6121f480620000af6000396000f3fe60806040526004361061012e5760003560e01c806354f6127f116100ab5780638da5cb5b1161006f5780638da5cb5b146103a4578063a055f707146103cc578063af541109146103fc578063d2e6994d1461042c578063f2fde38b14610467578063fcd8b0361461048757600080fd5b806354f6127f1461030f578063570b678a1461032f578063715018a61461034f5780637f23690c146103645780638243d94d1461038457600080fd5b80632bc3a3c1116100f25780632bc3a3c1146102415780632e34911e1461027257806340cc5cd11461029257806344c028fe146102c25780634e3e6e9c146102e257600080fd5b806301a81efb1461013a57806301ffc9a7146101705780630959151e146101a057806314a6e293146101ba578063150b7a02146101dc57600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5060025461015990610100900460ff1681565b60405160ff90911681526020015b60405180910390f35b34801561017c57600080fd5b5061019061018b366004611944565b6104a7565b6040519015158152602001610167565b3480156101ac57600080fd5b506002546101599060ff1681565b3480156101c657600080fd5b506101da6101d5366004611add565b6104ed565b005b3480156101e857600080fd5b506102286101f7366004611c17565b505050506001600160a01b03166000908152600760205260409020805460ff19166001179055630a85bd0160e11b90565b6040516001600160e01b03199091168152602001610167565b34801561024d57600080fd5b5061026161025c366004611c86565b6105af565b604051610167959493929190611d13565b34801561027e57600080fd5b506101da61028d366004611d6f565b610792565b34801561029e57600080fd5b506101596102ad366004611d6f565b60046020526000908152604090205460ff1681565b6102d56102d0366004611d8a565b610847565b6040516101679190611db2565b3480156102ee57600080fd5b506103026102fd366004611dc5565b610d51565b6040516101679190611dfa565b34801561031b57600080fd5b506102d561032a366004611e5c565b610e05565b34801561033b57600080fd5b506101da61034a366004611d6f565b610e10565b34801561035b57600080fd5b506101da610eef565b34801561037057600080fd5b506101da61037f366004611e75565b610f03565b34801561039057600080fd5b506101da61039f366004611ebc565b610f19565b3480156103b057600080fd5b506000546040516001600160a01b039091168152602001610167565b3480156103d857600080fd5b506101906103e7366004611d6f565b60036020526000908152604090205460ff1681565b34801561040857600080fd5b50610190610417366004611d6f565b60076020526000908152604090205460ff1681565b34801561043857600080fd5b50610190610447366004611f93565b600560209081526000928352604080842090915290825290205460ff1681565b34801561047357600080fd5b506101da610482366004611d6f565b610fd5565b34801561049357600080fd5b506101da6104a2366004611d6f565b61104e565b60006001600160e01b03198216632260147f60e11b14806104d857506001600160e01b03198216631c537ddf60e21b145b806104e757506104e7826111cf565b92915050565b6104f56111f4565b805182511461055a5760405162461bcd60e51b815260206004820152602660248201527f4b657973206c656e677468206e6f7420657175616c20746f2076616c756573206044820152650d8cadccee8d60d31b60648201526084015b60405180910390fd5b60005b82518110156105aa576105a283828151811061057b5761057b611fc6565b602002602001015183838151811061059557610595611fc6565b6020026020010151611277565b60010161055d565b505050565b80516020818301810180516006825292820191909301209152805481906105d590611fdc565b80601f016020809104026020016040519081016040528092919081815260200182805461060190611fdc565b801561064e5780601f106106235761010080835404028352916020019161064e565b820191906000526020600020905b81548152906001019060200180831161063157829003601f168201915b5050506001840154600285015460038601805495966001600160a01b039384169692909316945091925061068190611fdc565b80601f01602080910402602001604051908101604052809291908181526020018280546106ad90611fdc565b80156106fa5780601f106106cf576101008083540402835291602001916106fa565b820191906000526020600020905b8154815290600101906020018083116106dd57829003601f168201915b50505050509080600401805461070f90611fdc565b80601f016020809104026020016040519081016040528092919081815260200182805461073b90611fdc565b80156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b5050505050905085565b61079a6111f4565b60025460ff80821661010090920416106107ee5760405162461bcd60e51b815260206004820152601560248201527413dddb995c88185c99481b9bdd08185b1b1bddd959605a1b6044820152606401610551565b60028054610100900460ff1690600161080683612027565b825460ff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600360205260409020805460ff19166001179055565b60606108516111f4565b60005a905086610918578447101561087b5760405162461bcd60e51b815260040161055190612047565b6108be868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792506112c6915050565b9150846001600160a01b038716887f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e6108f7878961208d565b6040516001600160e01b0319909116815260200160405180910390a4610d47565b60038714156109d75784156109955760405162461bcd60e51b815260206004820152603860248201527f455243373235583a2063616e6e6f74207472616e736665722076616c7565207760448201527f697468206f7065726174696f6e2053544154494343414c4c00000000000000006064820152608401610551565b6108be8685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250869250611370915050565b6004871415610a96578415610a545760405162461bcd60e51b815260206004820152603a60248201527f455243373235583a2063616e6e6f74207472616e736665722076616c7565207760448201527f697468206f7065726174696f6e2044454c454741544543414c4c0000000000006064820152608401610551565b6108be8685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250869250611416915050565b6001871415610b99576001600160a01b03861615610ac65760405162461bcd60e51b8152600401610551906120bd565b84471015610ae65760405162461bcd60e51b815260040161055190612047565b6000610b288686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061147092505050565b6040516bffffffffffffffffffffffff19606083901b166020820152909150603401604051602081830303815290604052925085816001600160a01b0316897f01c42bd7e97a66166063b02fce6924e6656b6c2c61966630165095c4fb0b7b2f60405160405180910390a450610d47565b6002871415610d08576001600160a01b03861615610bc95760405162461bcd60e51b8152600401610551906120bd565b84471015610be95760405162461bcd60e51b815260040161055190612047565b6000610c3785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c32925060209150889050612126565b611524565b90506000610c8686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610c8191506020905089612126565b611582565b90506000610c95888484611691565b6040516bffffffffffffffffffffffff19606083901b166020820152909150603401604051602081830303815290604052945087816001600160a01b03168b7f01c42bd7e97a66166063b02fce6924e6656b6c2c61966630165095c4fb0b7b2f60405160405180910390a4505050610d47565b60405162461bcd60e51b815260206004820152601460248201527357726f6e67206f7065726174696f6e207479706560601b6044820152606401610551565b5095945050505050565b6060815167ffffffffffffffff811115610d6d57610d6d61196e565b604051908082528060200260200182016040528015610da057816020015b6060815260200190600190039081610d8b5790505b50905060005b8251811015610dff57610dd1838281518110610dc457610dc4611fc6565b602002602001015161179b565b828281518110610de357610de3611fc6565b6020026020010181905250610df88160010190565b9050610da6565b50919050565b60606104e78261179b565b610e186111f4565b6001600160a01b038116600090815260056020908152604080832033845290915290205460ff1615610e8c5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742070726f706f7365207468652073616d65206f776e65722100006044820152606401610551565b6001600160a01b03811660008181526005602090815260408083203384528252808320805460ff1916600117905592825260049052908120805460ff1691610ed383612027565b91906101000a81548160ff021916908360ff1602179055505050565b610ef76111f4565b610f01600061116a565b565b610f0b6111f4565b610f158282611277565b5050565b610f216111f4565b8060068260000151604051610f36919061213d565b90815260200160405180910390206000820151816000019080519060200190610f609291906118ab565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491909316911617905560608301518051610fb392600385019201906118ab565b5060808201518051610fcf9160048401916020909101906118ab565b50505050565b610fdd6111f4565b6001600160a01b0381166110425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610551565b61104b8161116a565b50565b6110566111f4565b6002805461106c9190610100900460ff16612159565b6001600160a01b03821660009081526004602052604090205460ff9182169116116110f45760405162461bcd60e51b815260206004820152603260248201527f4174206c6561737420353025206f66206f776e657273206e65656420746f20636044820152711bdb999a5c9b481d1a19481c995b5bdd985b60721b6064820152608401610551565b6001600160a01b0381166000908152600360205260409020805460ff1916905560028054610100900460ff1690600161112c83612189565b825460ff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b0382811691161461104b57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160e01b03198216631c537ddf60e21b14806104e757506104e78261183d565b336112076000546001600160a01b031690565b6001600160a01b0316148061122b57503360009081526003602052604090205460ff165b610f015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610551565b60008281526001602090815260409091208251611296928401906118ab565b5060405182907fcdf4e344c0d23d4cdd0474039d176c55b19d531070dbe17856bfb993a5b5720b90600090a25050565b6060600080866001600160a01b03168487876040516112e5919061213d565b600060405180830381858888f193505050503d8060008114611323576040519150601f19603f3d011682016040523d82523d6000602084013e611328565b606091505b509150915061136582826040518060400160405280601581526020017422a9219b991aac1d102ab735b737bb9022b93937b960591b815250611872565b979650505050505050565b6060600080856001600160a01b0316848660405161138e919061213d565b6000604051808303818686fa925050503d80600081146113ca576040519150601f19603f3d011682016040523d82523d6000602084013e6113cf565b606091505b509150915061140c82826040518060400160405280601581526020017422a9219b991aac1d102ab735b737bb9022b93937b960591b815250611872565b9695505050505050565b6060600080856001600160a01b03168486604051611434919061213d565b6000604051808303818686f4925050503d80600081146113ca576040519150601f19603f3d011682016040523d82523d6000602084013e6113cf565b60008151600014156114c45760405162461bcd60e51b815260206004820152601d60248201527f6e6f20636f6e74726163742062797465636f64652070726f76696465640000006044820152606401610551565b81516020830184f090506001600160a01b0381166104e75760405162461bcd60e51b815260206004820152601960248201527f436f756c64206e6f74206465706c6f7920636f6e7472616374000000000000006044820152606401610551565b60006115318260206121a6565b835110156115795760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610551565b50016020015190565b60608161159081601f6121a6565b10156115cf5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610551565b6115d982846121a6565b8451101561161d5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610551565b60608215801561163c5760405191506000825260208201604052611686565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561167557805183526020928301920161165d565b5050858452601f01601f1916604052505b5090505b9392505050565b600080844710156116e45760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610551565b82516117325760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610551565b8383516020850187f590506001600160a01b0381166117935760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610551565b949350505050565b60008181526001602052604090208054606091906117b890611fdc565b80601f01602080910402602001604051908101604052809291908181526020018280546117e490611fdc565b80156118315780601f1061180657610100808354040283529160200191611831565b820191906000526020600020905b81548152906001019060200180831161181457829003601f168201915b50505050509050919050565b60006001600160e01b03198216632260147f60e11b14806104e757506301ffc9a760e01b6001600160e01b03198316146104e7565b6060831561188157508161168a565b8251156118915782518084602001fd5b8160405162461bcd60e51b81526004016105519190611db2565b8280546118b790611fdc565b90600052602060002090601f0160209004810192826118d9576000855561191f565b82601f106118f257805160ff191683800117855561191f565b8280016001018555821561191f579182015b8281111561191f578251825591602001919060010190611904565b5061192b92915061192f565b5090565b5b8082111561192b5760008155600101611930565b60006020828403121561195657600080fd5b81356001600160e01b03198116811461168a57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156119a7576119a761196e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156119d6576119d661196e565b604052919050565b600067ffffffffffffffff8211156119f8576119f861196e565b5060051b60200190565b600082601f830112611a1357600080fd5b81356020611a28611a23836119de565b6119ad565b82815260059290921b84018101918181019086841115611a4757600080fd5b8286015b84811015611a625780358352918301918301611a4b565b509695505050505050565b600082601f830112611a7e57600080fd5b813567ffffffffffffffff811115611a9857611a9861196e565b611aab601f8201601f19166020016119ad565b818152846020838601011115611ac057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611af057600080fd5b823567ffffffffffffffff80821115611b0857600080fd5b611b1486838701611a02565b9350602091508185013581811115611b2b57600080fd5b8501601f81018713611b3c57600080fd5b8035611b4a611a23826119de565b81815260059190911b82018401908481019089831115611b6957600080fd5b8584015b83811015611ba157803586811115611b855760008081fd5b611b938c8983890101611a6d565b845250918601918601611b6d565b508096505050505050509250929050565b80356001600160a01b0381168114611bc957600080fd5b919050565b60008083601f840112611be057600080fd5b50813567ffffffffffffffff811115611bf857600080fd5b602083019150836020828501011115611c1057600080fd5b9250929050565b600080600080600060808688031215611c2f57600080fd5b611c3886611bb2565b9450611c4660208701611bb2565b935060408601359250606086013567ffffffffffffffff811115611c6957600080fd5b611c7588828901611bce565b969995985093965092949392505050565b600060208284031215611c9857600080fd5b813567ffffffffffffffff811115611caf57600080fd5b61179384828501611a6d565b60005b83811015611cd6578181015183820152602001611cbe565b83811115610fcf5750506000910152565b60008151808452611cff816020860160208601611cbb565b601f01601f19169290920160200192915050565b60a081526000611d2660a0830188611ce7565b6001600160a01b038781166020850152861660408401528281036060840152611d4f8186611ce7565b90508281036080840152611d638185611ce7565b98975050505050505050565b600060208284031215611d8157600080fd5b61168a82611bb2565b600080600080600060808688031215611da257600080fd5b85359450611c4660208701611bb2565b60208152600061168a6020830184611ce7565b600060208284031215611dd757600080fd5b813567ffffffffffffffff811115611dee57600080fd5b61179384828501611a02565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611e4f57603f19888603018452611e3d858351611ce7565b94509285019290850190600101611e21565b5092979650505050505050565b600060208284031215611e6e57600080fd5b5035919050565b60008060408385031215611e8857600080fd5b82359150602083013567ffffffffffffffff811115611ea657600080fd5b611eb285828601611a6d565b9150509250929050565b600060208284031215611ece57600080fd5b813567ffffffffffffffff80821115611ee657600080fd5b9083019060a08286031215611efa57600080fd5b611f02611984565b823582811115611f1157600080fd5b611f1d87828601611a6d565b825250611f2c60208401611bb2565b6020820152611f3d60408401611bb2565b6040820152606083013582811115611f5457600080fd5b611f6087828601611a6d565b606083015250608083013582811115611f7857600080fd5b611f8487828601611a6d565b60808301525095945050505050565b60008060408385031215611fa657600080fd5b611faf83611bb2565b9150611fbd60208401611bb2565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ff057607f821691505b60208210811415610dff57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81141561203e5761203e612011565b60010192915050565b60208082526026908201527f455243373235583a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6001600160e01b031981358181169160048510156120b55780818660040360031b1b83161692505b505092915050565b60208082526043908201527f455243373235583a20435245415445206f7065726174696f6e7320726571756960408201527f726520746865207265636569766572206164647265737320746f20626520656d60608201526270747960e81b608082015260a00190565b60008282101561213857612138612011565b500390565b6000825161214f818460208701611cbb565b9190910192915050565b600060ff83168061217a57634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b600060ff82168061219c5761219c612011565b6000190192915050565b600082198211156121b9576121b9612011565b50019056fea2646970667358221220bf0540e301c32a135c208446e2ef759a13cad554e50459e2412f4c859474767264736f6c63430008090033";

type IdentityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IdentityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Identity__factory extends ContractFactory {
  constructor(...args: IdentityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Identity> {
    return super.deploy(overrides || {}) as Promise<Identity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Identity {
    return super.attach(address) as Identity;
  }
  override connect(signer: Signer): Identity__factory {
    return super.connect(signer) as Identity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IdentityInterface {
    return new utils.Interface(_abi) as IdentityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Identity {
    return new Contract(address, _abi, signerOrProvider) as Identity;
  }
}
