/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUnset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUnset__factory>;
    getContractFactory(
      name: "ERC725",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725__factory>;
    getContractFactory(
      name: "ERC725XCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725XCore__factory>;
    getContractFactory(
      name: "ERC725YCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725YCore__factory>;
    getContractFactory(
      name: "IERC725X",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725X__factory>;
    getContractFactory(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725Y__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Claim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Claim__factory>;
    getContractFactory(
      name: "IdentitiesNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentitiesNFT__factory>;
    getContractFactory(
      name: "Identity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Identity__factory>;
    getContractFactory(
      name: "IdentityFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentityFactory__factory>;
    getContractFactory(
      name: "Calculate165Selectors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Calculate165Selectors__factory>;

    getContractAt(
      name: "OwnableUnset",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUnset>;
    getContractAt(
      name: "ERC725",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725>;
    getContractAt(
      name: "ERC725XCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725XCore>;
    getContractAt(
      name: "ERC725YCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725YCore>;
    getContractAt(
      name: "IERC725X",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725X>;
    getContractAt(
      name: "IERC725Y",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725Y>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Claim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Claim>;
    getContractAt(
      name: "IdentitiesNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentitiesNFT>;
    getContractAt(
      name: "Identity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Identity>;
    getContractAt(
      name: "IdentityFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IdentityFactory>;
    getContractAt(
      name: "Calculate165Selectors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Calculate165Selectors>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
